
Функция ПредставлениеКолонкиАнализа(Колонка, VIPЛимит) Экспорт

	ШаблонНаименованияКолонки = "%1 (%2/%3)";
	
	Возврат СтрШаблон(ШаблонНаименованияКолонки, "Анализ", КоличествоЗаданийВКолонке(Колонка), VIPЛимит);

КонецФункции

Функция ЕстьПревышениеVIPЛимита(Колонка) Экспорт
	
	VIPЛимит = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Колонка, "пр_VIPЛимит");
	
	КоличествоЗаданий = КоличествоЗаданийВКолонке(Колонка);
	
	Возврат ?(КоличествоЗаданий > VIPЛимит И VIPЛимит > 0, Истина, Ложь);
	
КонецФункции

Процедура ИзменитьПредставлениеКолонкиАнализа(Колонка) Экспорт

	VIPЛимит = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Колонка, "пр_VIPЛимит");
	
	Если VIPЛимит > 0 Тогда
		КолонкаОбъект = Колонка.ПолучитьОбъект();
		КолонкаОбъект.Наименование = ПредставлениеКолонкиАнализа(Колонка, VIPЛимит);
		КолонкаОбъект.Записать();
	КонецЕсли;

КонецПроцедуры

Функция КоличествоЗаданийВКолонке(Колонка) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КОЛИЧЕСТВО(ЗаписиКалендаряСотрудника.Ссылка) КАК КоличествоЗаданий,
		|	ЗаписиКалендаряСотрудника.КолонкаКалендаря КАК КолонкаКалендаря
		|ИЗ
		|	Справочник.ЗаписиКалендаряСотрудника КАК ЗаписиКалендаряСотрудника
		|ГДЕ
		|	ЗаписиКалендаряСотрудника.КолонкаКалендаря = &КолонкаКалендаря
		|	И НЕ ЗаписиКалендаряСотрудника.ПометкаУдаления
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаписиКалендаряСотрудника.КолонкаКалендаря";
	
	Запрос.УстановитьПараметр("КолонкаКалендаря", Колонка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
	
		Возврат ВыборкаДетальныеЗаписи.КоличествоЗаданий;
		
	Иначе
		
		Возврат 0;
		
	КонецЕсли;
	
КонецФункции

