
&НаКлиенте
&После("Подключаемый_Перетаскивание")
Процедура пр_Подключаемый_Перетаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	Если ПараметрыПеретаскивания.Значение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого Колонка Из КолонкиТекущейДоски Цикл
		пр_РаботаСКонтактЦентром.ИзменитьПредставлениеКолонкиАнализа(Колонка.Ссылка);
	КонецЦикла;
	
	ОбновитьЭлементыТекущейДоски();
	
	Оповестить("ЗаданиеПеремещено");
	
КонецПроцедуры

&НаСервере
&ИзменениеИКонтроль("ОбновитьКолонкуЗаписиКалендаря")
Процедура пр_ОбновитьКолонкуЗаписиКалендаря(ПараметрыПеретаскивания, ИмяСписка)

	Попытка	
		Если ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("ДокументСсылка.ЗадачаСотрудника") Тогда
			ЗаписьОбъект = ПараметрыПеретаскивания.Значение.ПолучитьОбъект();
		Иначе
			ЗаписьОбъект = ПараметрыПеретаскивания.ЗаписьКалендаря.ПолучитьОбъект();
		КонецЕсли;
		НачатьТранзакцию();
		ЗаписьОбъект.Заблокировать();
		ЗаписьОбъект.КолонкаКалендаря = ПараметрыПеретаскивания.Колонка;
		ЗаписьОбъект.Записать();
		ЗаписьОбъект.Разблокировать();
		#Вставка
		Колонка = ПараметрыПеретаскивания.Колонка;
		Если пр_РаботаСКонтактЦентром.ЕстьПревышениеVIPЛимита(Колонка) Тогда
			ОбщегоНазначения.СообщитьПользователю("Превышен VIP-Лимит, переместить новую задачу нельзя");
			ОтменитьТранзакцию();
		КонецЕсли;
		#КонецВставки

		Справочники.КолонкиКалендарейСотрудников.ПриИзмененииКолонкиЗаписи(ЗаписьОбъект.Ссылка, 
		ПараметрыПеретаскивания.Колонка);
		ЗафиксироватьТранзакцию();

		Элементы[ИмяСписка].Обновить();
		Элементы[ПараметрыПеретаскивания.СписокДляОбновления].Обновить();

		ТекущийЭлемент = Элементы[ИмяСписка];
		Элементы[ИмяСписка].ТекущаяСтрока = ПараметрыПеретаскивания.Значение.Значение;
	Исключение

	КонецПопытки

КонецПроцедуры
