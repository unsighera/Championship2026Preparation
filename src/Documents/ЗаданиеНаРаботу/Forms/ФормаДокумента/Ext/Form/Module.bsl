
&НаСервере
Процедура пр_ПриСозданииНаСервереПеред(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустая() Тогда 
		
		Если Параметры.ЗначенияЗаполнения.Свойство("ДанныеЗаписиКалендаря") Тогда
			Параметры.ЗначенияЗаполнения.ДанныеЗаписиКалендаря.Свойство("КолонкаКалендаря", КолонкаКалендаря); 
			Если ЗначениеЗаполнено(КолонкаКалендаря) Тогда
				
				VIPЛимит = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(КолонкаКалендаря, "пр_VIPЛимит");
				Если VIPЛимит > 0 Тогда
					КоличествоЗаданий = пр_РаботаСКонтактЦентром.КоличествоЗаданийВКолонке(КолонкаКалендаря);
					Если КоличествоЗаданий + 1 > VIPЛимит Тогда
						ОбщегоНазначения.СообщитьПользователю("Превышен VIP-Лимит, создать новую задачу нельзя"); 
						Отказ = Истина;
					КонецЕсли;
				КонецЕсли;
				
			КонецЕсли;	
			
		КонецЕсли;
		
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура пр_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	
	ГруппаФормы = Элементы.Добавить("пр_ГруппаФормы", Тип("ГруппаФормы"), Элементы.Шапка);
	ГруппаФормы.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаФормы.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	ГруппаФормы.РастягиватьПоГоризонтали = Истина;

	ПолеФормы = Элементы.Добавить("пр_Проект", Тип("ПолеФормы"), ГруппаФормы);
	ПолеФормы.Вид = ВидПоляФормы.ПолеВвода;
	ПолеФормы.ПутьКДанным = "Объект.пр_Проект";
	
	ПолеФормы = Элементы.Добавить("пр_ИдентификаторЗадания", Тип("ПолеФормы"), ГруппаФормы);
	ПолеФормы.Вид = ВидПоляФормы.ПолеВвода;
	ПолеФормы.ПутьКДанным = "Объект.пр_ИдентификаторЗадания";
	ПолеФормы.РастягиватьПоГоризонтали = Истина;
	
	ГруппаФормы = Элементы.Добавить("пр_ГруппаДанных", Тип("ГруппаФормы"), Элементы.Шапка);
	ГруппаФормы.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаФормы.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	ГруппаФормы.РастягиватьПоГоризонтали = Истина;
	
	ПолеФормы = Элементы.Добавить("пр_ПланGitLab", Тип("ПолеФормы"), ГруппаФормы);
	ПолеФормы.Вид = ВидПоляФормы.ПолеВвода;
	ПолеФормы.ПутьКДанным = "Объект.пр_ПланGitLab";
	ПолеФормы.ТолькоПросмотр = Ложь;
	
	ПолеФормы = Элементы.Добавить("пр_ФактGitLab", Тип("ПолеФормы"), ГруппаФормы);
	ПолеФормы.Вид = ВидПоляФормы.ПолеВвода;
	ПолеФормы.ПутьКДанным = "Объект.пр_ФактGitLab";
	ПолеФормы.ТолькоПросмотр = Ложь;
	
	ПолеФормы = Элементы.Добавить("пр_Статус", Тип("ПолеФормы"), Элементы.ГруппаВидИСостояние);
	ПолеФормы.Вид = ВидПоляФормы.ПолеНадписи; 
	ПолеФормы.ЦветФона = WebЦвета.Аквамарин;
	ПолеФормы.ПутьКДанным = "КолонкаКалендаря";
	ПолеФормы.Заголовок = "Статус"; 
	
	ПолеФормы = Элементы.Добавить("пр_ЗаданиеЗакрыто", Тип("ПолеФормы"), Элементы.ГруппаВидИСостояние);
	ПолеФормы.Вид = ВидПоляФормы.ПолеВвода; 
	ПолеФормы.ПутьКДанным = "Объект.пр_ЗаданиеЗакрыто";
	
	Элементы.ПланированиеЗаказчикРабота.Видимость = Ложь;
	Элементы.ВидОперации.Видимость = Ложь;
	Элементы.Состояние.Видимость = Ложь;
	Элементы.Итоги.Видимость = Ложь;    
	
	Если НЕ ЗначениеЗаполнено(КолонкаКалендаря) Тогда
		пр_ТекущаяКолонкаЗадания();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура пр_ТекущаяКолонкаЗадания()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаписиКалендаряСотрудника.КолонкаКалендаря КАК КолонкаКалендаря
	|ИЗ
	|	Справочник.ЗаписиКалендаряСотрудника КАК ЗаписиКалендаряСотрудника
	|ГДЕ
	|	ЗаписиКалендаряСотрудника.Источник = &Источник";
	
	Запрос.УстановитьПараметр("Источник", Объект.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		
		КолонкаКалендаря = ВыборкаДетальныеЗаписи.КолонкаКалендаря;
		
	Иначе
		
		КолонкаКалендаря = Справочники.КолонкиКалендарейСотрудников.ПустаяСсылка();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура пр_ПослеЗаписиПосле(ПараметрыЗаписи)
	
	пр_ТекущаяКолонкаЗадания();
	
КонецПроцедуры

&НаКлиенте
Процедура пр_ОбработкаОповещенияПосле(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ЗаданиеПеремещено" Тогда
		пр_ТекущаяКолонкаЗадания();
	КонецЕсли;
	
КонецПроцедуры




